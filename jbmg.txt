#include <DHT.h>  // dht 라이브러리 사용

#include <Servo.h>  //  servo 라이브러리 사용

#include <LiquidCrystal_I2C.h>  // lcd라이브러리 사용

#include <Wire.h>

 

#define DHTPIN 9  // 온습도 센서 9번핀 사용

#define DHTTYPE DHT22  // dht 타입 dht22으로 설정

#define lig A0  // 조도센서 A0핀으로 설정

#define BRIGHTNESS_LIMIT 500

 

float hum; // 습도값 저장 변수

float temp; // 온도값 저장 변수

float hum_prev; // 습도 과거 비교값

float temp_prev; //온도 과거 비교값

float val2_prev;

int firstRun = 1;

 

LiquidCrystal_I2C lcd(0x27, 20, 4);  // LCD객체 선언

DHT dht(DHTPIN, DHTTYPE);  // dht객체 선언

Servo servo;  //  servo객체 선언

 

int btn1 = 6;  // 버튼 1 6번핀으로 설정

int btn2 = 7;  // 버튼 2 7번핀으로 설정

int cnt = 1;  // 버튼 누름 횟수 입력 변수

int rain = 8;  // 빗물감지 센서 8번핀으로 설정

 

void setup() {

  pinMode(btn1, INPUT_PULLUP);  // btn1 입력으로 설정

  pinMode(btn2, INPUT_PULLUP);  // btn2 입력으로 설정

  pinMode(lig, INPUT);  // lig 입력으로 설정

  pinMode(rain, INPUT);  // rain 입력으로 설정

  lcd.init();  // lcd창 초기화

  lcd.backlight();  // lcd 백라이트 on

  servo.attach(10);  // servo 11번핀으로 설정

  Serial.begin(9600); //시리얼모니터 설정

  pinMode(2, OUTPUT); //필름전원 출력

}

 

void loop() {

 

  Serial.print("HUMIDITY: "); // "HUMIDITY:" 출력

  Serial.print(hum,0);// 습도 값 소수점 이하 자리 없음

  Serial.print(" %, TEMPERATURE: "); //"%"(습도단위) "TEMPERATURE:" 출력

  Serial.print(temp, 1);//온도값은 소수점 이하 1자리까지 표시

  Serial.println(" C"); //"C" 온도 단위 표시

 

 

       int brightness = analogRead(A0); // A0조도센서에서 값을 받음

      

       if ( brightness < BRIGHTNESS_LIMIT ) // 어두운 경우

       {

        digitalWrite(2, LOW); // 전원on, 필름투명

       }

       else

       {

         digitalWrite(2, HIGH); // 전원off, 필름불투명

       }

  

  float h = dht.readHumidity();  // 습도 값 입력

  float t = dht.readTemperature();  // 온도 값 입력'

  hum = dht.readHumidity();//습도값 읽기

  temp= dht.readTemperature();//온도값 읽기

  int val1 = analogRead(lig);  // 조도센서 값 입력

  int val2 = digitalRead(rain);  // 빗물감지 센서 값 입력

  

  if(digitalRead(btn1) == LOW){  // 버튼1을 눌렀을 경우 1증가

    cnt += 1;

    if(cnt == 4){

      cnt = 1;

    }

    delay(1000);  // 0.1초 지속

  }

  

  if(digitalRead(btn2) == LOW){  // 버튼2를 눌렀을 경우 1감소

    cnt -= 1;

    if(cnt == 0){

      cnt = 3;

    }

    delay(1000);  // 0.1초 지속

  }

 

  

  if(cnt == 2){  // cnt가 2일때 온도 센서로 서보모터 제어

 

    delay(500);

    lcd.setCursor(0,0);

    lcd.print("  Temperature  ");

    lcd.setCursor(5,1);

    float t = temp; // 온도값을 t에 할당

    lcd.print(t,1); // 온도값 LCD로 출력

    lcd.print(" C"); // 온도 단위 표시

    delay(700);

    

    servo.write(90);

    delay(100);

  

    if(t >= temp_prev){  //온도변화, 24도이상 창문열림

     if(temp_prev>=24){

      servo.write(90);    

      delay(1000);

     } else{

      if(t<24){

        servo.write(90);

        delay(100);     

      }else{

        servo.write(120);

        delay(2500);

        servo.write(90);

        delay(100);

      }

     }

    }

     else{

     if(temp_prev<24){ // 온도변화, 24도미만 창문닫힘

      servo.write(90);

      delay(100);

     }else{

      if(t>=24){

        servo.write(90);

        delay(100);

      }else{

        servo.write(0);

        delay(1800);

        servo.write(90);

        delay(100);        

      }

     }

     }

     servo.write(90);

   delay(100);

   temp_prev=t;

   delay(100);

  }else if(cnt == 1){  // cnt가 1일때 습도센서로 서보모터 제어

     delay(2500);

    lcd.setCursor(0,0);

    lcd.print("    Humidity    ");

    lcd.setCursor(5,1);

    float h = hum; //습도값 h에 할당

    lcd.print(h);  // 문자 출력

    lcd.print(" % "); //습도 단위 출력

    delay(2500);

   servo.write(90);

   delay(100);

  

    if(h >= hum_prev){  // 습도가 60 이상일 때 (비) 창문 닫힘

     if(hum_prev>=60){

      servo.write(90);    

     delay(1000);

     }else{

      if(h<60){

        servo.write(90);

        delay(100);     

      }else{

        servo.write(120); //

        delay(2500);

        servo.write(90);

        delay(100);

      }

     }

    }

     else{

     if(hum_prev<60){ // 습도 60미만일 때 창문 열림

      servo.write(90);

      delay(100);

     }else{

      if(h>=60){

        servo.write(90);

        delay(100);

      }else{

        servo.write(0); // 

        delay(1800);

        servo.write(90);

        delay(100);

        

      }

     }

     }

     servo.write(90);

   delay(100);

   hum_prev=h;

   delay(100);

  }else if(cnt == 3){  // cnt가 4일때 빗물감지 센서로 서보모터 제어

    lcd.setCursor(0,0);

    lcd.print("     Mode 3     ");

    lcd.setCursor(0,1);

    lcd.print("      Water     ");  // 문자 출력

    delay(2000);

    if(val2 != 0){

      if(val2_prev!=0){// 빗물이 감지되지 않으면 창문이 열림      

      servo.write(90);

        delay(100);

      }else{

        servo.write(120);

        delay(2500);

        servo.write(90);

        delay(100);

      }

    }else{

      servo.write(90);

      delay(100);

      if(val2_prev!=0){// 빗물이 감지되면 창문이 닫힘

      servo.write(0);

      delay(1800);

      servo.write(90);

        delay(100);

      }       

    }

    servo.write(90);

        delay(100);

    val2_prev=val2;

    delay(100);

  } 

}